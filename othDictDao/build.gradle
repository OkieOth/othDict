apply plugin: 'java'
//apply plugin: 'application'
apply plugin: 'maven-publish'

// // Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.

project.group = 'de.othsoft.dict'
project.version = '0.1-SNAPSHOT'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

publishing {
    repositories {
        maven {
            url "${System.getenv('HOME')}/myMavenRepos"
        }
    }
}

repositories {
    maven {
        url "${System.getenv('HOME')}/myMavenRepos"
    }
    mavenCentral()
}

//apply from: 'src/model/model.gradle'

buildscript {
    repositories {
        maven {
            url "${System.getenv('HOME')}/myMavenRepos"
        }
        mavenCentral()
    }
    dependencies {
        classpath 'de.othsoft.codeGen:gradlePlugin:0.1-SNAPSHOT'
    }
}
apply plugin: 'de.othsoft.othcodegen'

import de.othsoft.codeGen.requirements.AttribType
import de.othsoft.codeGen.types.DataModel 

class OthDictDbModel extends DataModel {
    OthDictDbModel () {
        // Der Name des Modell ergibt sich aus dem Namen der Klasse
        version=1
        shortName='dict'
        
        defaultTypes=[
                'name' : AttribType.t_string,
                'descr' : AttribType.t_string,
                'id_str' : AttribType.t_string,
                ]
        
        entity ( name:'Dictionary').
                descr = 'All saved string resources'
            attrib ( name:'name' )
        
        entity ( name:'Application' ).
                descr = 'what application use this string resource'
            attrib ( name:'name' )
            attrib ( name:'descr' )
            attrib ( name:'id_str' )
           
        entity ( name:'AppDictEntry' ).
                descr = 'relation between apps and dictentrys'            
            attrib ( name:'id_str' )
            attrib ( name:'descr' )
            attrib ( name:'group', type:AttribType.t_str_list)
            ref ( refName:'Application' )


        entity ( name:'Language' ).
                descr = 'language of a dict entry'
            attrib ( name:'shortName', type: AttribType.t_string )
            attrib ( name:'descr' )
            attrib ( name:'defaultLang', type: AttribType.t_boolean )

        entity ( name:'DictEntry' ).
                descr = 'a entry to translate'            
            attrib ( name:'txt', type: AttribType.t_string )
            attrib ( name:'trans_state', type:AttribType.t_str_list)
            ref ( refName:'Language' )

                               
        m2nRel ( refName1:'DictEntry', refName2:'AppDictEntry').
                descr = 'tells what DictEntry is used for a specific AppStringEntry-ID'
    
        view ( name:'LangsForApp').
                descr = 'what languages are for a app available'
            attrib ( name:'app_name', type: AttribType.t_string )
            attrib ( name:'lang_shortname', type: AttribType.t_string )

        view ( name:'EntryAppLang').
                descr = 'give the entries for app and langs'
            attrib ( name:'app_id', type:AttribType.t_string )
            attrib ( name:'lang_shortname', type:AttribType.t_string )
            attrib ( name:'txt', type:AttribType.t_string )
        resolveReferences()
    }
}

othCodeGen {
    model = new OthDictDbModel()
    generators = ['db_psql','dao_base','dao_jdbc']
}



if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

dependencies {
    // TODO: Add dependencies here
    //   but note that JUnit should have already been added in parent.gradle.
    //   By default, only the Maven Central Repository is specified in
    //   parent.gradle.
    //
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    runtime 'de.othsoft.codeGen:gCodeGen:0.1-SNAPSHOT'
    compile 'de.othsoft.codeGen:jJdbcDaoRequirements:0.1'
}
